openapi: 3.0.2
info:
  title: 'Order Registratie Component (ORC)'
  version: 0.0.1
  description: |
    API Details
    - Component: Proto Component
    - Reference: pc
    - Enviroment: dev
    - Version: V.0.1
    - Repository: [online](https://github.com/ConductionNL/Proto-component-commonground) / [zip](https://github.com/ConductionNL/Proto-component-commonground/archive/master.zip)
    - Docker Image: [online](https://hub.docker.com/repository/docker/conduction/pc-php) 
    - Datamodel: [postman](/schema/openapi.postman_collection) / [oas](/schema/openapi.yaml) / [pdf](/schema/datamodel.pdf) / [mwb](/schema/datamodel.mwb) 
    
    'Naast deze JSON rest API is er ook een [graphql](/graphql) interface beschikbaar.'         
    
paths:
  /order_items:
    get:
      tags:
        - OrderItem
      operationId: getOrderItemCollection
      summary: 'Retrieves the collection of OrderItem resources.'
      responses:
        200:
          description: 'OrderItem collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderItem-read'
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderItem-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderItem-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderItem-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderItem-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderItem-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderItem-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderItem-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
    post:
      tags:
        - OrderItem
      operationId: postOrderItemCollection
      summary: 'Creates a OrderItem resource.'
      responses:
        201:
          description: 'OrderItem resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            text/html:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
          links:
            GetOrderItemItem:
              parameters:
                id: '$response.body#/id'
              operationId: getOrderItemItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /order_items/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
          text/html:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
        description: 'The new OrderItem resource'
  '/order_items/{id}':
    get:
      tags:
        - OrderItem
      operationId: getOrderItemItem
      summary: 'Retrieves a OrderItem resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'OrderItem resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            text/html:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - OrderItem
      operationId: deleteOrderItemItem
      summary: 'Removes the OrderItem resource.'
      responses:
        204:
          description: 'OrderItem resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - OrderItem
      operationId: putOrderItemItem
      summary: 'Replaces the OrderItem resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'OrderItem resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            text/html:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
          text/html:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
        description: 'The updated OrderItem resource'
    patch:
      tags:
        - OrderItem
      operationId: patchOrderItemItem
      summary: 'Updates the OrderItem resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'OrderItem resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            text/html:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
          text/html:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
        description: 'The updated OrderItem resource'
  /orders:
    get:
      tags:
        - Order
      operationId: getOrderCollection
      summary: 'Retrieves the collection of Order resources.'
      responses:
        200:
          description: 'Order collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order-read'
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order-read'
      parameters:
        -
          name: reference
          in: query
          required: false
          schema:
            type: string
        -
          name: 'reference[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: rsin
          in: query
          required: false
          schema:
            type: string
        -
          name: 'rsin[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: submitter
          in: query
          required: false
          schema:
            type: string
        -
          name: 'submitter[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Order
      operationId: postOrderCollection
      summary: 'Creates a Order resource.'
      responses:
        201:
          description: 'Order resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Order-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Order-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Order-read'
          links:
            GetOrderItem:
              parameters:
                id: '$response.body#/id'
              operationId: getOrderItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /orders/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Order-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Order-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Order-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Order-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Order-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Order-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Order-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Order-write'
        description: 'The new Order resource'
  '/orders/{id}':
    get:
      tags:
        - Order
      operationId: getOrderItem
      summary: 'Retrieves a Order resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Order resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Order-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Order-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Order-read'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - Order
      operationId: deleteOrderItem
      summary: 'Removes the Order resource.'
      responses:
        204:
          description: 'Order resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Order
      operationId: putOrderItem
      summary: 'Replaces the Order resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Order resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Order-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Order-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Order-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Order-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Order-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Order-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Order-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Order-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Order-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Order-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Order-write'
        description: 'The updated Order resource'
    patch:
      tags:
        - Order
      operationId: patchOrderItem
      summary: 'Updates the Order resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Order resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Order-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Order-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Order-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Order-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Order-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Order-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Order-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Order-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Order-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Order-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Order-write'
        description: 'The updated Order resource'
components:
  schemas:
    Order-read:
      type: object
      description: 'This is an example entity'
      properties:
        reference:
          readOnly: true
          type: string
        rsin:
          description: 'The RSIN of the organisation where this order was placed'
          type: string
        submitter:
          description: 'The BSN (if person) or RSIN (if organisation) that submited this request'
          type: string
        submitter_person:
          description: 'True if the submitters is a person'
          type: boolean
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem-read'
        price: {  }
        created_at:
          readOnly: true
          description: 'The moment this request was created by the submitter'
          type: string
          format: date-time
      required:
        - rsin
        - submitter
    Order-write:
      type: object
      description: ''
      required:
        - rsin
        - submitter
      properties:
        rsin:
          description: 'The RSIN of the organisation where this order was placed'
          type: string
        submitter:
          description: 'The BSN (if person) or RSIN (if organisation) that submited this request'
          type: string
        submitter_person:
          description: 'True if the submitters is a person'
          type: boolean
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem-write'
        price: {  }
    OrderItem-read:
      type: object
      description: ''
      properties:
        product:
          type: string
        quantity:
          type: integer
        price: {  }
        order:
          $ref: '#/components/schemas/Order-read'
    OrderItem-write:
      type: object
      description: ''
      properties:
        product:
          type: string
        quantity:
          type: integer
        price: {  }
        order:
          $ref: '#/components/schemas/Order-write'
servers:
  -
    description: 'Demo Omgeving'
    url: 'http://orc.zaakonline.nl'
externalDocs:
  -
    description: 'OAS Documentatie'
    url: 'http://orc.zaakonline.nl'
x-commonground:
  type: service
  developers:
    -
      name: Conduction
      url: 'https://github.com/ConductionNL'
      email: info@conduction.nl
    -
      name: 'Gemeente ''s-Hertogenbosch'
      url: 'https://github.com/gemeenteshertogenbosch'
      email: info@s-hertogenbosch.nl/
    -
      name: 'Gemeente Utrecht'
      url: 'https://github.com/GemeenteUtrecht'
      email: info@utrecht.nl
  builds:
    -
      name: travis
      logo: 'https://travis-ci.org/api-platform/core.svg?branch=master'
      url: 'https://travis-ci.org/api-platform/core'
    -
      name: appveyor
      logo: 'https://ci.appveyor.com/api/projects/status/grwuyprts3wdqx5l?svg=true'
      url: 'https://ci.appveyor.com/project/dunglas/dunglasapibundle'
    -
      name: codecov
      logo: 'https://codecov.io/gh/api-platform/core/branch/master/graph/badge.svg'
      url: 'https://codecov.io/gh/api-platform/core'
    -
      name: SensioLabsInsight
      logo: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93/mini.png'
      url: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93'
    -
      name: 'Scrutinizer Code Quality'
      logo: 'https://scrutinizer-ci.com/g/api-platform/core/badges/quality-score.png?b=master'
      url: 'https://scrutinizer-ci.com/g/api-platform/core/?branch=master'
