openapi: 3.0.2
info:
  title: 'Order Registratie Component'
  version: V.0.1
  description: |
    API Details
    - Component: Order Registratie Component
    - Reference: orc
    - Enviroment: dev
    - Version: V.0.1
    - Repository: [online](https://github.com/ConductionNL/Proto-component-commonground) / [zip](https://github.com/ConductionNL/Proto-component-commonground/archive/master.zip)
    - Docker Image: [online](https://hub.docker.com/repository/docker/conduction/orc-php) 
    - Datamodel: [postman](/schema/orc.postman_collection.json) / [oas](/schema/openapi.yaml) / [pdf](/schema/datamodel.pdf) / [mwb](/schema/datamodel.mwb) 
    
    'Naast deze JSON rest API is er ook een [graphql](/graphql) interface beschikbaar.'         
    
paths:
  /order_items:
    get:
      tags:
        - OrderItem
      operationId: getOrderItemCollection
      summary: 'Retrieves the collection of OrderItem resources.'
      responses:
        200:
          description: 'OrderItem collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderItem-read'
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/OrderItem:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderItem-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderItem-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderItem-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderItem-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderItem-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderItem-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - OrderItem
      operationId: postOrderItemCollection
      summary: 'Creates a OrderItem resource.'
      responses:
        201:
          description: 'OrderItem resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/OrderItem:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            text/html:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
          links:
            GetOrderItemItem:
              parameters:
                id: '$response.body#/id'
              operationId: getOrderItemItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /order_items/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/OrderItem:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
          text/html:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
        description: 'The new OrderItem resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/order_items/{id}':
    get:
      tags:
        - OrderItem
      operationId: getOrderItemItem
      summary: 'Retrieves a OrderItem resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'OrderItem resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/OrderItem:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            text/html:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - OrderItem
      operationId: deleteOrderItemItem
      summary: 'Removes the OrderItem resource.'
      responses:
        204:
          description: 'OrderItem resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - OrderItem
      operationId: putOrderItemItem
      summary: 'Replaces the OrderItem resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'OrderItem resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/OrderItem:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            text/html:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/OrderItem:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
          text/html:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
        description: 'The updated OrderItem resource'
    patch:
      tags:
        - OrderItem
      operationId: patchOrderItemItem
      summary: 'Updates the OrderItem resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'OrderItem resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/OrderItem:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            text/html:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
        description: 'The updated OrderItem resource'
  /orders:
    get:
      tags:
        - Order
      operationId: getOrderCollection
      summary: 'Retrieves the collection of Order resources.'
      responses:
        200:
          description: 'Order collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order-read'
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Order:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order-read'
      parameters:
        -
          name: reference
          in: query
          required: false
          schema:
            type: string
        -
          name: 'reference[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: targetOrganization
          in: query
          required: false
          schema:
            type: string
        -
          name: 'targetOrganization[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Order
      operationId: postOrderCollection
      summary: 'Creates a Order resource.'
      responses:
        201:
          description: 'Order resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Order:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Order-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Order-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Order-read'
          links:
            GetOrderItem:
              parameters:
                id: '$response.body#/id'
              operationId: getOrderItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /orders/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Order-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Order:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Order-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Order-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Order-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Order-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Order-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Order-write'
        description: 'The new Order resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/orders/{id}':
    get:
      tags:
        - Order
      operationId: getOrderItem
      summary: 'Retrieves a Order resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Order resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Order:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Order-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Order-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Order-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Order
      operationId: deleteOrderItem
      summary: 'Removes the Order resource.'
      responses:
        204:
          description: 'Order resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Order
      operationId: putOrderItem
      summary: 'Replaces the Order resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Order resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Order:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Order-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Order-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Order-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Order-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Order:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Order-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Order-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Order-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Order-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Order-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Order-write'
        description: 'The updated Order resource'
    patch:
      tags:
        - Order
      operationId: patchOrderItem
      summary: 'Updates the Order resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Order resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Order:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Order-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Order-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Order-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Order-write'
        description: 'The updated Order resource'
  /organizations:
    get:
      tags:
        - Organization
      operationId: getOrganizationCollection
      summary: 'Retrieves the collection of Organization resources.'
      responses:
        200:
          description: 'Organization collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Organization:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Organization
      operationId: postOrganizationCollection
      summary: 'Creates a Organization resource.'
      responses:
        201:
          description: 'Organization resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization-read'
          links:
            GetOrganizationItem:
              parameters:
                id: '$response.body#/id'
              operationId: getOrganizationItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /organizations/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Organization:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Organization-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Organization-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Organization-write'
        description: 'The new Organization resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/organizations/{id}':
    get:
      tags:
        - Organization
      operationId: getOrganizationItem
      summary: 'Retrieves a Organization resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Organization resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Organization
      operationId: deleteOrganizationItem
      summary: 'Removes the Organization resource.'
      responses:
        204:
          description: 'Organization resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Organization
      operationId: putOrganizationItem
      summary: 'Replaces the Organization resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Organization resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Organization:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Organization-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Organization-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Organization-write'
        description: 'The updated Organization resource'
    patch:
      tags:
        - Organization
      operationId: patchOrganizationItem
      summary: 'Updates the Organization resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Organization resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
        description: 'The updated Organization resource'
  /reference_ids:
    get:
      tags:
        - ReferenceId
      operationId: getReferenceIdCollection
      summary: 'Retrieves the collection of ReferenceId resources.'
      responses:
        200:
          description: 'ReferenceId collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReferenceId-read'
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ReferenceId:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReferenceId-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReferenceId-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReferenceId-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReferenceId-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReferenceId-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReferenceId-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - ReferenceId
      operationId: postReferenceIdCollection
      summary: 'Creates a ReferenceId resource.'
      responses:
        201:
          description: 'ReferenceId resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ReferenceId-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ReferenceId:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ReferenceId-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceId-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ReferenceId-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ReferenceId-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ReferenceId-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ReferenceId-read'
          links:
            GetReferenceIdItem:
              parameters:
                id: '$response.body#/id'
              operationId: getReferenceIdItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /reference_ids/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ReferenceId-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ReferenceId:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ReferenceId-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ReferenceId-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ReferenceId-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ReferenceId-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ReferenceId-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ReferenceId-write'
        description: 'The new ReferenceId resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/reference_ids/{id}':
    get:
      tags:
        - ReferenceId
      operationId: getReferenceIdItem
      summary: 'Retrieves a ReferenceId resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'ReferenceId resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ReferenceId-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ReferenceId:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ReferenceId-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceId-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ReferenceId-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ReferenceId-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ReferenceId-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ReferenceId-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - ReferenceId
      operationId: deleteReferenceIdItem
      summary: 'Removes the ReferenceId resource.'
      responses:
        204:
          description: 'ReferenceId resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - ReferenceId
      operationId: putReferenceIdItem
      summary: 'Replaces the ReferenceId resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'ReferenceId resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ReferenceId-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ReferenceId:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ReferenceId-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceId-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ReferenceId-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ReferenceId-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ReferenceId-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ReferenceId-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ReferenceId-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ReferenceId:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ReferenceId-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ReferenceId-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ReferenceId-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ReferenceId-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ReferenceId-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ReferenceId-write'
        description: 'The updated ReferenceId resource'
    patch:
      tags:
        - ReferenceId
      operationId: patchReferenceIdItem
      summary: 'Updates the ReferenceId resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'ReferenceId resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ReferenceId-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ReferenceId:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ReferenceId-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceId-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ReferenceId-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ReferenceId-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ReferenceId-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ReferenceId-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ReferenceId-write'
        description: 'The updated ReferenceId resource'
components:
  schemas:
    Order-read:
      type: object
      description: 'An entity representing an order.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of the order'
          type: string
        description:
          description: 'The description of the order'
          type: string
        reference:
          readOnly: true
          description: 'The human readable reference for this request, build as {gemeentecode}-{year}-{referenceId}. Where gemeentecode is a four digit number for gemeenten and a four letter abriviation for other organizations'
          type: string
        targetOrganization:
          description: 'The RSIN of the organization that owns this process'
          type: string
        price:
          description: 'The price of this product'
          type: string
        priceCurrency:
          description: 'The currency of this product in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
          externalDocs:
            url: 'http://schema.org/priceCurrency'
          type: string
        tax:
          description: 'The total tax over the order'
          type: string
        dateCreated:
          readOnly: true
          description: 'The moment this request was created by the submitter'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this request was modified by the submitter'
          type: string
          format: date-time
        items:
          description: 'The items in this order'
          type: array
          items:
            $ref: '#/components/schemas/OrderItem-read'
        customer:
          description: 'The customer that placed this order'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        referenceId:
          description: 'The auto incrementing part of the reference parameter'
          $ref: '#/components/schemas/ReferenceId-read'
        organization:
          description: 'The organization that created this order'
          $ref: '#/components/schemas/Organization-read'
      required:
        - name
        - targetOrganization
    Order-write:
      type: object
      description: 'An entity representing an order.'
      required:
        - name
        - targetOrganization
      properties:
        name:
          description: 'The name of the order'
          type: string
        description:
          description: 'The description of the order'
          type: string
        targetOrganization:
          description: 'The RSIN of the organization that owns this process'
          type: string
        price:
          description: 'The price of this product'
          type: string
        priceCurrency:
          description: 'The currency of this product in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
          externalDocs:
            url: 'http://schema.org/priceCurrency'
          type: string
        tax:
          description: 'The total tax over the order'
          type: string
        items:
          description: 'The items in this order'
          type: array
          items:
            $ref: '#/components/schemas/OrderItem-write'
        customer:
          description: 'The customer that placed this order'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        referenceId:
          description: 'The auto incrementing part of the reference parameter'
          $ref: '#/components/schemas/ReferenceId-write'
        organization:
          description: 'The organization that created this order'
          $ref: '#/components/schemas/Organization-write'
    'Order:jsonld-read':
      type: object
      description: 'An entity representing an order.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of the order'
          type: string
        description:
          description: 'The description of the order'
          type: string
        reference:
          readOnly: true
          description: 'The human readable reference for this request, build as {gemeentecode}-{year}-{referenceId}. Where gemeentecode is a four digit number for gemeenten and a four letter abriviation for other organizations'
          type: string
        targetOrganization:
          description: 'The RSIN of the organization that owns this process'
          type: string
        price:
          description: 'The price of this product'
          type: string
        priceCurrency:
          description: 'The currency of this product in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
          externalDocs:
            url: 'http://schema.org/priceCurrency'
          type: string
        tax:
          description: 'The total tax over the order'
          type: string
        dateCreated:
          readOnly: true
          description: 'The moment this request was created by the submitter'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this request was modified by the submitter'
          type: string
          format: date-time
        items:
          description: 'The items in this order'
          type: array
          items:
            $ref: '#/components/schemas/OrderItem:jsonld-read'
        customer:
          description: 'The customer that placed this order'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        referenceId:
          description: 'The auto incrementing part of the reference parameter'
          $ref: '#/components/schemas/ReferenceId:jsonld-read'
        organization:
          description: 'The organization that created this order'
          $ref: '#/components/schemas/Organization:jsonld-read'
      required:
        - name
        - targetOrganization
    'Order:jsonld-write':
      type: object
      description: 'An entity representing an order.'
      required:
        - name
        - targetOrganization
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of the order'
          type: string
        description:
          description: 'The description of the order'
          type: string
        targetOrganization:
          description: 'The RSIN of the organization that owns this process'
          type: string
        price:
          description: 'The price of this product'
          type: string
        priceCurrency:
          description: 'The currency of this product in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
          externalDocs:
            url: 'http://schema.org/priceCurrency'
          type: string
        tax:
          description: 'The total tax over the order'
          type: string
        items:
          description: 'The items in this order'
          type: array
          items:
            $ref: '#/components/schemas/OrderItem:jsonld-write'
        customer:
          description: 'The customer that placed this order'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        referenceId:
          description: 'The auto incrementing part of the reference parameter'
          $ref: '#/components/schemas/ReferenceId:jsonld-write'
        organization:
          description: 'The organization that created this order'
          $ref: '#/components/schemas/Organization:jsonld-write'
    OrderItem-read:
      type: object
      description: 'An entity representing an item of an order.'
      properties:
        id:
          readOnly: true
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of the object'
          type: string
        description:
          description: 'The description of the order item'
          type: string
        order:
          description: 'The order that contains this item'
          $ref: '#/components/schemas/Order-read'
        offer:
          description: 'The offer this item represents'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        product:
          description: 'The product this item represents. DEPRECATED: REPLACED BY OFFER'
          type: string
        quantity:
          description: 'The quantity of the items that are ordered'
          type: integer
        price:
          description: 'The price of this product'
          type: string
        priceCurrency:
          description: 'The currency of this product in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
          externalDocs:
            url: 'http://schema.org/priceCurrency'
          type: string
        taxPercentage:
          description: 'The tax percentage for this offer as an integer e.g. 9% makes 9'
          type: integer
        createdAt:
          readOnly: true
          description: 'The moment this request was created by the submitter'
          type: string
          format: date-time
      required:
        - order
        - offer
        - quantity
        - taxPercentage
    OrderItem-write:
      type: object
      description: 'An entity representing an item of an order.'
      properties:
        name:
          description: 'The name of the object'
          type: string
        description:
          description: 'The description of the order item'
          type: string
        order:
          description: 'The order that contains this item'
          $ref: '#/components/schemas/Order-write'
        offer:
          description: 'The offer this item represents'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        product:
          description: 'The product this item represents. DEPRECATED: REPLACED BY OFFER'
          type: string
        quantity:
          description: 'The quantity of the items that are ordered'
          type: integer
        price:
          description: 'The price of this product'
          type: string
        priceCurrency:
          description: 'The currency of this product in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
          externalDocs:
            url: 'http://schema.org/priceCurrency'
          type: string
        taxPercentage:
          description: 'The tax percentage for this offer as an integer e.g. 9% makes 9'
          type: integer
      required:
        - order
        - offer
        - quantity
        - taxPercentage
    'OrderItem:jsonld-read':
      type: object
      description: 'An entity representing an item of an order.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of the object'
          type: string
        description:
          description: 'The description of the order item'
          type: string
        order:
          description: 'The order that contains this item'
          $ref: '#/components/schemas/Order:jsonld-read'
        offer:
          description: 'The offer this item represents'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        product:
          description: 'The product this item represents. DEPRECATED: REPLACED BY OFFER'
          type: string
        quantity:
          description: 'The quantity of the items that are ordered'
          type: integer
        price:
          description: 'The price of this product'
          type: string
        priceCurrency:
          description: 'The currency of this product in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
          externalDocs:
            url: 'http://schema.org/priceCurrency'
          type: string
        taxPercentage:
          description: 'The tax percentage for this offer as an integer e.g. 9% makes 9'
          type: integer
        createdAt:
          readOnly: true
          description: 'The moment this request was created by the submitter'
          type: string
          format: date-time
      required:
        - order
        - offer
        - quantity
        - taxPercentage
    'OrderItem:jsonld-write':
      type: object
      description: 'An entity representing an item of an order.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of the object'
          type: string
        description:
          description: 'The description of the order item'
          type: string
        order:
          description: 'The order that contains this item'
          $ref: '#/components/schemas/Order:jsonld-write'
        offer:
          description: 'The offer this item represents'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        product:
          description: 'The product this item represents. DEPRECATED: REPLACED BY OFFER'
          type: string
        quantity:
          description: 'The quantity of the items that are ordered'
          type: integer
        price:
          description: 'The price of this product'
          type: string
        priceCurrency:
          description: 'The currency of this product in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
          externalDocs:
            url: 'http://schema.org/priceCurrency'
          type: string
        taxPercentage:
          description: 'The tax percentage for this offer as an integer e.g. 9% makes 9'
          type: integer
      required:
        - order
        - offer
        - quantity
        - taxPercentage
    Organization-read:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        rsin:
          type: string
        shortCode:
          type: string
      required:
        - rsin
        - shortCode
    Organization-write:
      type: object
      description: ''
      required:
        - rsin
        - shortCode
      properties:
        rsin:
          type: string
        shortCode:
          type: string
    'Organization:jsonld-read':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        rsin:
          type: string
        shortCode:
          type: string
      required:
        - rsin
        - shortCode
    'Organization:jsonld-write':
      type: object
      description: ''
      required:
        - rsin
        - shortCode
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        rsin:
          type: string
        shortCode:
          type: string
    ReferenceId-read:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          type: integer
        referencedOrder:
          $ref: '#/components/schemas/Order-read'
    ReferenceId-write:
      type: object
      description: ''
      properties:
        referencedOrder:
          $ref: '#/components/schemas/Order-write'
    'ReferenceId:jsonld-read':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          type: integer
        referencedOrder:
          $ref: '#/components/schemas/Order:jsonld-read'
    'ReferenceId:jsonld-write':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        referencedOrder:
          $ref: '#/components/schemas/Order:jsonld-write'
definitions:
  Order-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of the order'
        type: string
        example: 'my Order'
        maxLength: 255
      description:
        description: 'The description of the order'
        type: string
        example: 'This is the best order ever'
        maxLength: 255
      reference:
        description: 'The human readable reference for this request, build as {gemeentecode}-{year}-{referenceId}. Where gemeentecode is a four digit number for gemeenten and a four letter abriviation for other organizations'
        type: string
        example: 6666-2019-0000000012
        maxLength: 255
      targetOrganization:
        description: 'The RSIN of the organization that owns this process'
        type: string
        example: '002851234'
        maxLength: 255
      price:
        description: 'The price of this product'
        type: string
        example: '50.00'
      priceCurrency:
        description: 'The currency of this product in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
        type: string
        example: EUR
      tax:
        description: 'The total tax over the order'
        type: string
        example: '21.00'
      dateCreated:
        description: 'The moment this request was created by the submitter'
        type: \DateTime
        example: '20190101'
      dateModified:
        description: 'The moment this request was modified by the submitter'
        type: \DateTime
        example: '20190101'
      customer:
        description: 'The customer that placed this order'
        type: string
        example: 'https://example.org/people/1'
        format: url
      items:
        description: 'The items in this order'
        type: \ArrayCollection
      referenceId:
        description: 'The auto incrementing part of the reference parameter'
        type: \ReferenceId
      organization:
        description: 'The organization that created this order'
        type: \Organization
    required:
      - name
      - targetOrganization
  Order-write:
    properties:
      name:
        description: 'The name of the order'
        type: string
        example: 'my Order'
        maxLength: 255
      description:
        description: 'The description of the order'
        type: string
        example: 'This is the best order ever'
        maxLength: 255
      targetOrganization:
        description: 'The RSIN of the organization that owns this process'
        type: string
        example: '002851234'
        maxLength: 255
      price:
        description: 'The price of this product'
        type: string
        example: '50.00'
      priceCurrency:
        description: 'The currency of this product in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
        type: string
        example: EUR
      tax:
        description: 'The total tax over the order'
        type: string
        example: '21.00'
      customer:
        description: 'The customer that placed this order'
        type: string
        example: 'https://example.org/people/1'
        format: url
      items:
        description: 'The items in this order'
        type: \ArrayCollection
      referenceId:
        description: 'The auto incrementing part of the reference parameter'
        type: \ReferenceId
      organization:
        description: 'The organization that created this order'
        type: \Organization
    required:
      - name
      - targetOrganization
  OrderItem-read:
    properties:
      id:
        description: ''
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of the object'
        type: string
        example: 'my OrderItem'
        maxLength: 255
      description:
        description: 'The description of the order item'
        type: string
        example: 'This is the best order item ever'
        maxLength: 255
      offer:
        description: 'The offer this item represents'
        type: string
        example: 'http://example.org/offers/1'
        format: url
      product:
        description: 'The product this item represents. DEPRECATED: REPLACED BY OFFER'
        type: string
        maxLength: 255
      quantity:
        description: 'The quantity of the items that are ordered'
        type: int
        example: '1'
      price:
        description: 'The price of this product'
        type: string
        example: '50.00'
      priceCurrency:
        description: 'The currency of this product in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
        type: string
        example: EUR
      taxPercentage:
        description: 'The tax percentage for this offer as an integer e.g. 9% makes 9'
        type: int
        example: '9'
      createdAt:
        description: 'The moment this request was created by the submitter'
        type: \DateTime
      order:
        description: 'The order that contains this item'
        type: \Order
    required:
      - offer
      - order
  OrderItem-write:
    properties:
      name:
        description: 'The name of the object'
        type: string
        example: 'my OrderItem'
        maxLength: 255
      description:
        description: 'The description of the order item'
        type: string
        example: 'This is the best order item ever'
        maxLength: 255
      offer:
        description: 'The offer this item represents'
        type: string
        example: 'http://example.org/offers/1'
        format: url
      product:
        description: 'The product this item represents. DEPRECATED: REPLACED BY OFFER'
        type: string
        maxLength: 255
      quantity:
        description: 'The quantity of the items that are ordered'
        type: int
        example: '1'
      price:
        description: 'The price of this product'
        type: string
        example: '50.00'
      priceCurrency:
        description: 'The currency of this product in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
        type: string
        example: EUR
      taxPercentage:
        description: 'The tax percentage for this offer as an integer e.g. 9% makes 9'
        type: int
        example: '9'
      order:
        description: 'The order that contains this item'
        type: \Order
    required:
      - offer
      - order
  Organization-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      rsin:
        maxLength: 16
        minLength: 4
      shortCode:
        maxLength: 4
    required:
      - rsin
      - shortCode
  Organization-write:
    properties:
      rsin:
        maxLength: 16
        minLength: 4
      shortCode:
        maxLength: 4
    required:
      - rsin
      - shortCode
  ReferenceId-read:
    properties:
      id: []
      referencedOrder: []
    required: []
  ReferenceId-write:
    properties:
      referencedOrder: []
    required: []
tags:
  -
    name: Order
    description: |
      An entity representing an order.
      
      This entity represents an order for sales
  -
    name: OrderItem
    description: |
      An entity representing an item of an order.
      
      This entity represents an item that is placed on the order
  -
    name: Organization
    description: |
      
      
      
  -
    name: ReferenceId
    description: |
      
      
      
securityDefinitions:
  JWT-Oauth:
    type: oauth2
    authorizationUrl: 'http://petstore.swagger.io/api/oauth/dialog'
    flow: implicit
    scopes:
      read: 'read right to the ReferenceId resource'
      write: 'write right to the ReferenceId resource'
  JWT-Token:
    type: apiKey
    in: header
    name: Authorization
    scopes:
      read: 'read right to the ReferenceId resource'
      write: 'write right to the ReferenceId resource'
host: irc.zaakonline.nl
servers:
  -
    description: 'Demo Omgeving'
    url: 'http://pdc.zaakonline.nl'
externalDocs:
  -
    description: 'OAS Documentatie'
    url: 'http://pdc.zaakonline.nl'
  -
    description: Repository
    url: 'https://github.com/ConductionNL/productenendienstencatalogus'
x-commonground:
  type: service
  developers:
    -
      name: Conduction
      url: 'https://github.com/ConductionNL'
      email: info@conduction.nl
    -
      name: 'Gemeente ''s-Hertogenbosch'
      url: 'https://github.com/gemeenteshertogenbosch'
      email: info@s-hertogenbosch.nl/
    -
      name: 'Gemeente Utrecht'
      url: 'https://github.com/GemeenteUtrecht'
      email: info@utrecht.nl
  builds:
    -
      name: travis
      logo: 'https://travis-ci.org/api-platform/core.svg?branch=master'
      url: 'https://travis-ci.org/api-platform/core'
    -
      name: appveyor
      logo: 'https://ci.appveyor.com/api/projects/status/grwuyprts3wdqx5l?svg=true'
      url: 'https://ci.appveyor.com/project/dunglas/dunglasapibundle'
    -
      name: codecov
      logo: 'https://codecov.io/gh/api-platform/core/branch/master/graph/badge.svg'
      url: 'https://codecov.io/gh/api-platform/core'
    -
      name: SensioLabsInsight
      logo: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93/mini.png'
      url: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93'
    -
      name: 'Scrutinizer Code Quality'
      logo: 'https://scrutinizer-ci.com/g/api-platform/core/badges/quality-score.png?b=master'
      url: 'https://scrutinizer-ci.com/g/api-platform/core/?branch=master'
