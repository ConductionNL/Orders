openapi: 3.0.2
info:
  title: ''
  version: V.0.1
  description: |
    API Details
    - Component: 
    - Reference: orderregistratiecomponent
    - Enviroment: dev
    - Version: V.0.1
    - Repository: [online](https://github.com/ConductionNL/orderregistratiecomponent) / [zip](https://github.com/ConductionNL/orderregistratiecomponent/archive/master.zip)
    - Docker Image: [online]() 
    - Datamodel: [postman](schema/orderregistratiecomponent.postman_collection.json) / [oas](schema/openapi.yaml) / [pdf](schema/datamodel.pdf) / [modelio (zip)](schema/Datamodel_Modelio.zip) 
    
    Naast deze JSON rest API is er ook een [graphql](/graphql) interface beschikbaar.         
    
paths:
  /audit_trails:
    get:
      tags:
        - AuditTrail
      operationId: getAuditTrailCollection
      summary: 'Retrieves the collection of AuditTrail resources.'
      responses:
        200:
          description: 'AuditTrail collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
      parameters:
        -
          name: 'order[application]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[request]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[user]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[subject]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[resource]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[resourceType]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[endpoint]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[contentType]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[content]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[session]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: request
          in: query
          required: false
          schema:
            type: string
        -
          name: 'request[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: user
          in: query
          required: false
          schema:
            type: string
        -
          name: 'user[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: subject
          in: query
          required: false
          schema:
            type: string
        -
          name: 'subject[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: resource
          in: query
          required: false
          schema:
            type: string
        -
          name: 'resource[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: resourceType
          in: query
          required: false
          schema:
            type: string
        -
          name: endpoint
          in: query
          required: false
          schema:
            type: string
        -
          name: 'endpoint[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: contentType
          in: query
          required: false
          schema:
            type: string
        -
          name: 'contentType[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: content
          in: query
          required: false
          schema:
            type: string
        -
          name: 'content[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: session
          in: query
          required: false
          schema:
            type: string
        -
          name: 'session[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - AuditTrail
      operationId: postAuditTrailCollection
      summary: 'Creates a AuditTrail resource.'
      responses:
        201:
          description: 'AuditTrail resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
          links:
            GetAuditTrailItem:
              parameters:
                id: '$response.body#/id'
              operationId: getAuditTrailItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /audit_trails/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        description: 'The new AuditTrail resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/audit_trails/{id}':
    get:
      tags:
        - AuditTrail
      operationId: getAuditTrailItem
      summary: 'Retrieves a AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'AuditTrail resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - AuditTrail
      operationId: deleteAuditTrailItem
      summary: 'Removes the AuditTrail resource.'
      responses:
        204:
          description: 'AuditTrail resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - AuditTrail
      operationId: putAuditTrailItem
      summary: 'Replaces the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'AuditTrail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        description: 'The updated AuditTrail resource'
    patch:
      tags:
        - AuditTrail
      operationId: patchAuditTrailItem
      summary: 'Updates the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'AuditTrail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        description: 'The updated AuditTrail resource'
  /change_logs:
    get:
      tags:
        - ChangeLog
      operationId: getChangeLogCollection
      summary: 'Retrieves the collection of ChangeLog resources.'
      responses:
        200:
          description: 'ChangeLog collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
      parameters:
        -
          name: 'order[action]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[objectId]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[objectClass]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[version]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[username]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: action
          in: query
          required: false
          schema:
            type: string
        -
          name: 'action[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: objectId
          in: query
          required: false
          schema:
            type: string
        -
          name: 'objectId[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: objectClass
          in: query
          required: false
          schema:
            type: string
        -
          name: 'objectClass[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: version
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'version[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - ChangeLog
      operationId: postChangeLogCollection
      summary: 'Creates a ChangeLog resource.'
      responses:
        201:
          description: 'ChangeLog resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
          links:
            GetChangeLogItem:
              parameters:
                id: '$response.body#/id'
              operationId: getChangeLogItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /change_logs/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        description: 'The new ChangeLog resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/change_logs/{id}':
    get:
      tags:
        - ChangeLog
      operationId: getChangeLogItem
      summary: 'Retrieves a ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'ChangeLog resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - ChangeLog
      operationId: deleteChangeLogItem
      summary: 'Removes the ChangeLog resource.'
      responses:
        204:
          description: 'ChangeLog resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - ChangeLog
      operationId: putChangeLogItem
      summary: 'Replaces the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'ChangeLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        description: 'The updated ChangeLog resource'
    patch:
      tags:
        - ChangeLog
      operationId: patchChangeLogItem
      summary: 'Updates the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'ChangeLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        description: 'The updated ChangeLog resource'
  /order_items:
    get:
      tags:
        - OrderItem
      operationId: getOrderItemCollection
      summary: 'Retrieves the collection of OrderItem resources.'
      responses:
        200:
          description: 'OrderItem collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/OrderItem:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/OrderItem:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderItem-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderItem-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderItem-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderItem-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderItem-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderItem-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderItem-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderItem-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderItem-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderItem-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderItem-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[offer]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[quantity]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[price]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[priceCurrency]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[recurrence]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[notice]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateStart]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateEnd]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateStart[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateStart[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateStart[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateStart[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateEnd[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateEnd[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateEnd[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateEnd[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: order.customer
          in: query
          required: false
          schema:
            type: string
        -
          name: 'order.customer[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - OrderItem
      operationId: postOrderItemCollection
      summary: 'Creates a OrderItem resource.'
      responses:
        201:
          description: 'OrderItem resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/OrderItem:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/OrderItem:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            text/html:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
          links:
            GetOrderItemItem:
              parameters:
                id: '$response.body#/id'
              operationId: getOrderItemItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /order_items/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/OrderItem:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/OrderItem:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
          text/html:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
        description: 'The new OrderItem resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/order_items/{id}':
    get:
      tags:
        - OrderItem
      operationId: getOrderItemItem
      summary: 'Retrieves a OrderItem resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'OrderItem resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/OrderItem:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/OrderItem:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            text/html:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - OrderItem
      operationId: putOrderItemItem
      summary: 'Replaces the OrderItem resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'OrderItem resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/OrderItem:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/OrderItem:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            text/html:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/OrderItem:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/OrderItem:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
          text/html:
            schema:
              $ref: '#/components/schemas/OrderItem-write'
        description: 'The updated OrderItem resource'
    delete:
      tags:
        - OrderItem
      operationId: deleteOrderItemItem
      summary: 'Removes the OrderItem resource.'
      responses:
        204:
          description: 'OrderItem resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/order_items/{id}/audit_trail':
    get:
      tags:
        - OrderItem
      operationId: get_audit_trailOrderItemItem
      summary: 'Retrieves a OrderItem resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'OrderItem resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/OrderItem:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/OrderItem:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            text/html:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/order_items/{id}/change_log':
    get:
      tags:
        - OrderItem
      operationId: get_change_logsOrderItemItem
      summary: 'Retrieves a OrderItem resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'OrderItem resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/OrderItem:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/OrderItem:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
            text/html:
              schema:
                $ref: '#/components/schemas/OrderItem-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  /orders:
    get:
      tags:
        - Order
      operationId: getOrderCollection
      summary: 'Retrieves the collection of Order resources.'
      responses:
        200:
          description: 'Order collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Order:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Order:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[organization]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[invoice]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[resources]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[reference]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[referenceId]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[price]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[priceCurrency]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[customer]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[remark]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: organization
          in: query
          required: false
          schema:
            type: string
        -
          name: 'organization[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: resources
          in: query
          required: false
          schema:
            type: string
        -
          name: 'resources[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: deepObject
          explode: true
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: reference
          in: query
          required: false
          schema:
            type: string
        -
          name: 'reference[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: customer
          in: query
          required: false
          schema:
            type: string
        -
          name: 'customer[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Order
      operationId: postOrderCollection
      summary: 'Creates a Order resource.'
      responses:
        201:
          description: 'Order resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Order:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Order:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Order-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Order-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Order-read'
          links:
            GetOrderItem:
              parameters:
                id: '$response.body#/id'
              operationId: getOrderItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /orders/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Order:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Order:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Order-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Order-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Order-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Order-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Order-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Order-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Order-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Order-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Order-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Order-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Order-write'
        description: 'The new Order resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/orders/{id}':
    get:
      tags:
        - Order
      operationId: getOrderItem
      summary: 'Retrieves a Order resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Order resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Order:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Order:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Order-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Order-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Order-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - Order
      operationId: putOrderItem
      summary: 'Replaces the Order resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Order resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Order:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Order:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Order-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Order-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Order-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Order:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Order:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Order-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Order-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Order-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Order-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Order-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Order-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Order-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Order-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Order-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Order-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Order-write'
        description: 'The updated Order resource'
    delete:
      tags:
        - Order
      operationId: deleteOrderItem
      summary: 'Removes the Order resource.'
      responses:
        204:
          description: 'Order resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/orders/{id}/audit_trail':
    get:
      tags:
        - Order
      operationId: get_audit_trailOrderItem
      summary: 'Retrieves a Order resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Order resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Order:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Order:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Order-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Order-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Order-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/orders/{id}/change_log':
    get:
      tags:
        - Order
      operationId: get_change_logsOrderItem
      summary: 'Retrieves a Order resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Order resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Order:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Order:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Order-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Order-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Order-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Order-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  /taxes:
    get:
      tags:
        - Tax
      operationId: getTaxCollection
      summary: 'Retrieves the collection of Tax resources.'
      responses:
        200:
          description: 'Tax collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Tax:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Tax:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tax-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tax-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tax-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tax-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tax-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tax-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tax-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tax-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tax-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tax-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tax-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[price]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[priceCurrency]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[percentage]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: 'name[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: 'description[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: price
          in: query
          required: false
          schema:
            type: string
        -
          name: 'price[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: priceCurrency
          in: query
          required: false
          schema:
            type: string
        -
          name: 'priceCurrency[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: percentage
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'percentage[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: dateCreated
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: dateModified
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Tax
      operationId: postTaxCollection
      summary: 'Creates a Tax resource.'
      responses:
        201:
          description: 'Tax resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Tax:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Tax:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Tax-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Tax-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Tax-read'
          links:
            GetTaxItem:
              parameters:
                id: '$response.body#/id'
              operationId: getTaxItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /taxes/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Tax:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Tax:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Tax-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Tax-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Tax-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Tax-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Tax-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Tax-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Tax-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Tax-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Tax-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Tax-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Tax-write'
        description: 'The new Tax resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/taxes/{id}':
    get:
      tags:
        - Tax
      operationId: getTaxItem
      summary: 'Retrieves a Tax resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Tax resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Tax:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Tax:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Tax-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Tax-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Tax-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - Tax
      operationId: putTaxItem
      summary: 'Replaces the Tax resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Tax resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Tax:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Tax:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Tax-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Tax-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Tax-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Tax:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Tax:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Tax-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Tax-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Tax-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Tax-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Tax-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Tax-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Tax-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Tax-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Tax-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Tax-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Tax-write'
        description: 'The updated Tax resource'
    delete:
      tags:
        - Tax
      operationId: deleteTaxItem
      summary: 'Removes the Tax resource.'
      responses:
        204:
          description: 'Tax resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/taxes/{id}/audit_trail':
    get:
      tags:
        - Tax
      operationId: get_audit_trailTaxItem
      summary: 'Retrieves a Tax resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Tax resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Tax:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Tax:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Tax-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Tax-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Tax-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/taxes/{id}/change_log':
    get:
      tags:
        - Tax
      operationId: get_change_logsTaxItem
      summary: 'Retrieves a Tax resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Tax resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Tax:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Tax:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Tax-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Tax-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Tax-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
components:
  schemas:
    AuditTrail-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        application:
          writeOnly: true
          description: 'The application that made the request'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        request:
          description: 'The id of the request within that application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        user:
          description: 'The user on behalf of wich the request was made'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        subject:
          description: '???'
          type: string
          nullable: true
        process:
          description: 'The procces on behalf of wich the request was made'
          type: string
          nullable: true
        dataElements:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        dataSubjects:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        resource:
          description: 'The resource that was requested'
          type: string
          nullable: true
        resourceType:
          description: 'The type of the resource that was requested'
          type: string
          nullable: true
        route:
          description: 'The moment this request was created'
          type: string
          nullable: true
        endpoint:
          description: 'The endpoint that the request was made to'
          type: string
          nullable: true
        method:
          description: 'The method that was used'
          type: string
          nullable: true
        accept:
          description: 'The contentType that was reqousted'
          type: string
          nullable: true
        contentType:
          description: 'The contentType that was suplieds'
          type: string
          nullable: true
        content:
          description: 'The moment this request was created'
          type: string
          nullable: true
        ip:
          description: 'The moment this request was created'
          type: string
          nullable: true
        session:
          description: 'The moment this request was created'
          type: string
        headers:
          description: 'The headers supplied by client'
          type: array
          items:
            type: string
        statusCode:
          description: 'The status code returned to client'
          type: integer
          nullable: true
        notFound:
          description: 'Whether or not the reqousted endpoint was found'
          type: boolean
          nullable: true
        forbidden:
          description: 'Whether or not the client was allowed to the reqousted endpoint'
          type: boolean
          nullable: true
        ok:
          description: 'Whether or not there where any problems'
          type: boolean
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    AuditTrail-write:
      type: object
      description: 'An resource representing a log line.'
    'AuditTrail:jsonld-read':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        application:
          writeOnly: true
          description: 'The application that made the request'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        request:
          description: 'The id of the request within that application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        user:
          description: 'The user on behalf of wich the request was made'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        subject:
          description: '???'
          type: string
          nullable: true
        process:
          description: 'The procces on behalf of wich the request was made'
          type: string
          nullable: true
        dataElements:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        dataSubjects:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        resource:
          description: 'The resource that was requested'
          type: string
          nullable: true
        resourceType:
          description: 'The type of the resource that was requested'
          type: string
          nullable: true
        route:
          description: 'The moment this request was created'
          type: string
          nullable: true
        endpoint:
          description: 'The endpoint that the request was made to'
          type: string
          nullable: true
        method:
          description: 'The method that was used'
          type: string
          nullable: true
        accept:
          description: 'The contentType that was reqousted'
          type: string
          nullable: true
        contentType:
          description: 'The contentType that was suplieds'
          type: string
          nullable: true
        content:
          description: 'The moment this request was created'
          type: string
          nullable: true
        ip:
          description: 'The moment this request was created'
          type: string
          nullable: true
        session:
          description: 'The moment this request was created'
          type: string
        headers:
          description: 'The headers supplied by client'
          type: array
          items:
            type: string
        statusCode:
          description: 'The status code returned to client'
          type: integer
          nullable: true
        notFound:
          description: 'Whether or not the reqousted endpoint was found'
          type: boolean
          nullable: true
        forbidden:
          description: 'Whether or not the client was allowed to the reqousted endpoint'
          type: boolean
          nullable: true
        ok:
          description: 'Whether or not there where any problems'
          type: boolean
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    'AuditTrail:jsonld-write':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
    ChangeLog-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        action:
          type: string
        objectId:
          type: string
          nullable: true
        objectClass:
          type: string
        version:
          type: integer
        data:
          type: array
          items:
            type: string
          nullable: true
        username:
          type: string
          nullable: true
        session:
          description: 'The moment this request was created'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    ChangeLog-write:
      type: object
      description: 'An resource representing a log line.'
    'ChangeLog:jsonld-read':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        action:
          type: string
        objectId:
          type: string
          nullable: true
        objectClass:
          type: string
        version:
          type: integer
        data:
          type: array
          items:
            type: string
          nullable: true
        username:
          type: string
          nullable: true
        session:
          description: 'The moment this request was created'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    'ChangeLog:jsonld-write':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
    Order-read:
      type: object
      description: 'An entity representing an order.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        organization:
          description: 'A specific commonground organisation'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        invoice:
          description: 'The invoice of this order'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        resources:
          description: 'The resource of the contact moment'
          type: array
          items:
            type: string
          nullable: true
        name:
          description: 'The name of the order'
          type: string
        description:
          description: 'The description of the order'
          type: string
          nullable: true
        reference:
          description: 'The human readable reference for this request, build as {gemeentecode}-{year}-{referenceId}. Where gemeentecode is a four digit number for gemeenten and a four letter abriviation for other organizations'
          type: string
          nullable: true
        price:
          description: 'The price of this product'
          type: string
          nullable: true
        priceCurrency:
          description: 'The currency of this product in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
          externalDocs:
            url: 'http://schema.org/priceCurrency'
          type: string
          nullable: true
        taxes:
          description: 'The taxes that affect this offer'
          type: array
          items:
            $ref: '#/components/schemas/Tax-read'
        items:
          description: 'The items in this order'
          type: array
          items:
            $ref: '#/components/schemas/OrderItem-read'
        customer:
          description: 'The customer that placed this order'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        remark:
          description: 'Remarks on this order'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created by the submitter'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request was modified by the submitter'
          type: string
          format: date-time
          nullable: true
      required:
        - organization
        - name
    Order-write:
      type: object
      description: 'An entity representing an order.'
      required:
        - organization
        - name
      properties:
        organization:
          description: 'A specific commonground organisation'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        invoice:
          description: 'The invoice of this order'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        resources:
          description: 'The resource of the contact moment'
          type: array
          items:
            type: string
          nullable: true
        name:
          description: 'The name of the order'
          type: string
        description:
          description: 'The description of the order'
          type: string
          nullable: true
        price:
          description: 'The price of this product'
          type: string
          nullable: true
        priceCurrency:
          description: 'The currency of this product in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
          externalDocs:
            url: 'http://schema.org/priceCurrency'
          type: string
          nullable: true
        taxes:
          description: 'The taxes that affect this offer'
          type: array
          items:
            $ref: '#/components/schemas/Tax-write'
        items:
          description: 'The items in this order'
          type: array
          items:
            $ref: '#/components/schemas/OrderItem-write'
        customer:
          description: 'The customer that placed this order'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        remark:
          description: 'Remarks on this order'
          type: string
          nullable: true
    'Order:jsonld-read':
      type: object
      description: 'An entity representing an order.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        organization:
          description: 'A specific commonground organisation'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        invoice:
          description: 'The invoice of this order'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        resources:
          description: 'The resource of the contact moment'
          type: array
          items:
            type: string
          nullable: true
        name:
          description: 'The name of the order'
          type: string
        description:
          description: 'The description of the order'
          type: string
          nullable: true
        reference:
          description: 'The human readable reference for this request, build as {gemeentecode}-{year}-{referenceId}. Where gemeentecode is a four digit number for gemeenten and a four letter abriviation for other organizations'
          type: string
          nullable: true
        price:
          description: 'The price of this product'
          type: string
          nullable: true
        priceCurrency:
          description: 'The currency of this product in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
          externalDocs:
            url: 'http://schema.org/priceCurrency'
          type: string
          nullable: true
        taxes:
          description: 'The taxes that affect this offer'
          type: array
          items:
            $ref: '#/components/schemas/Tax:jsonld-read'
        items:
          description: 'The items in this order'
          type: array
          items:
            $ref: '#/components/schemas/OrderItem:jsonld-read'
        customer:
          description: 'The customer that placed this order'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        remark:
          description: 'Remarks on this order'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created by the submitter'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request was modified by the submitter'
          type: string
          format: date-time
          nullable: true
      required:
        - organization
        - name
    'Order:jsonld-write':
      type: object
      description: 'An entity representing an order.'
      required:
        - organization
        - name
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        organization:
          description: 'A specific commonground organisation'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        invoice:
          description: 'The invoice of this order'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        resources:
          description: 'The resource of the contact moment'
          type: array
          items:
            type: string
          nullable: true
        name:
          description: 'The name of the order'
          type: string
        description:
          description: 'The description of the order'
          type: string
          nullable: true
        price:
          description: 'The price of this product'
          type: string
          nullable: true
        priceCurrency:
          description: 'The currency of this product in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
          externalDocs:
            url: 'http://schema.org/priceCurrency'
          type: string
          nullable: true
        taxes:
          description: 'The taxes that affect this offer'
          type: array
          items:
            $ref: '#/components/schemas/Tax:jsonld-write'
        items:
          description: 'The items in this order'
          type: array
          items:
            $ref: '#/components/schemas/OrderItem:jsonld-write'
        customer:
          description: 'The customer that placed this order'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        remark:
          description: 'Remarks on this order'
          type: string
          nullable: true
    OrderItem-read:
      type: object
      description: 'An entity representing an item of an order.'
      properties:
        id:
          readOnly: true
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of the object'
          type: string
          nullable: true
        description:
          description: 'The description of the order item'
          type: string
          nullable: true
        order:
          description: 'The order that contains this item'
          $ref: '#/components/schemas/Order-read'
        offer:
          description: 'The offer this item represents'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        quantity:
          description: 'The quantity of the items that are ordered'
          type: integer
        price:
          description: |
            The price of this orderItem
            
            @example 50.00
          type: string
        priceCurrency:
          description: 'The currency of this product in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
          externalDocs:
            url: 'http://schema.org/priceCurrency'
          type: string
        taxes:
          description: 'The taxes that affect this offer'
          type: array
          items:
            $ref: '#/components/schemas/Tax-read'
        recurrence:
          description: 'The of this offer, only used in combination with subscribtion type products, entered according to the [ISO 8601-standard](https://en.wikipedia.org/wiki/ISO_8601#Durations)'
          type: string
          nullable: true
        notice:
          description: 'The the notice period requered to end an subscribtion, entered according to the [ISO 8601-standard](https://en.wikipedia.org/wiki/ISO_8601#Durations)'
          type: string
          nullable: true
        dateStart:
          description: 'The moment this subscribtion begins (only used on subscribtions)'
          type: string
          format: date-time
          nullable: true
        dateEnd:
          description: 'The moment this subscribtion end'
          type: string
          format: date-time
          nullable: true
        dateCreated:
          description: 'The moment this request was created by the submitter'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request was updated'
          type: string
          format: date-time
          nullable: true
      required:
        - order
        - offer
        - quantity
        - price
    OrderItem-write:
      type: object
      description: 'An entity representing an item of an order.'
      properties:
        name:
          description: 'The name of the object'
          type: string
          nullable: true
        description:
          description: 'The description of the order item'
          type: string
          nullable: true
        order:
          description: 'The order that contains this item'
          $ref: '#/components/schemas/Order-write'
        offer:
          description: 'The offer this item represents'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        quantity:
          description: 'The quantity of the items that are ordered'
          type: integer
        price:
          description: |
            The price of this orderItem
            
            @example 50.00
          type: string
        priceCurrency:
          description: 'The currency of this product in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
          externalDocs:
            url: 'http://schema.org/priceCurrency'
          type: string
        taxes:
          description: 'The taxes that affect this offer'
          type: array
          items:
            $ref: '#/components/schemas/Tax-write'
        recurrence:
          description: 'The of this offer, only used in combination with subscribtion type products, entered according to the [ISO 8601-standard](https://en.wikipedia.org/wiki/ISO_8601#Durations)'
          type: string
          nullable: true
        notice:
          description: 'The the notice period requered to end an subscribtion, entered according to the [ISO 8601-standard](https://en.wikipedia.org/wiki/ISO_8601#Durations)'
          type: string
          nullable: true
        dateStart:
          description: 'The moment this subscribtion begins (only used on subscribtions)'
          type: string
          format: date-time
          nullable: true
        dateEnd:
          description: 'The moment this subscribtion end'
          type: string
          format: date-time
          nullable: true
      required:
        - order
        - offer
        - quantity
        - price
    'OrderItem:jsonld-read':
      type: object
      description: 'An entity representing an item of an order.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of the object'
          type: string
          nullable: true
        description:
          description: 'The description of the order item'
          type: string
          nullable: true
        order:
          description: 'The order that contains this item'
          $ref: '#/components/schemas/Order:jsonld-read'
        offer:
          description: 'The offer this item represents'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        quantity:
          description: 'The quantity of the items that are ordered'
          type: integer
        price:
          description: |
            The price of this orderItem
            
            @example 50.00
          type: string
        priceCurrency:
          description: 'The currency of this product in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
          externalDocs:
            url: 'http://schema.org/priceCurrency'
          type: string
        taxes:
          description: 'The taxes that affect this offer'
          type: array
          items:
            $ref: '#/components/schemas/Tax:jsonld-read'
        recurrence:
          description: 'The of this offer, only used in combination with subscribtion type products, entered according to the [ISO 8601-standard](https://en.wikipedia.org/wiki/ISO_8601#Durations)'
          type: string
          nullable: true
        notice:
          description: 'The the notice period requered to end an subscribtion, entered according to the [ISO 8601-standard](https://en.wikipedia.org/wiki/ISO_8601#Durations)'
          type: string
          nullable: true
        dateStart:
          description: 'The moment this subscribtion begins (only used on subscribtions)'
          type: string
          format: date-time
          nullable: true
        dateEnd:
          description: 'The moment this subscribtion end'
          type: string
          format: date-time
          nullable: true
        dateCreated:
          description: 'The moment this request was created by the submitter'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request was updated'
          type: string
          format: date-time
          nullable: true
      required:
        - order
        - offer
        - quantity
        - price
    'OrderItem:jsonld-write':
      type: object
      description: 'An entity representing an item of an order.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of the object'
          type: string
          nullable: true
        description:
          description: 'The description of the order item'
          type: string
          nullable: true
        order:
          description: 'The order that contains this item'
          $ref: '#/components/schemas/Order:jsonld-write'
        offer:
          description: 'The offer this item represents'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        quantity:
          description: 'The quantity of the items that are ordered'
          type: integer
        price:
          description: |
            The price of this orderItem
            
            @example 50.00
          type: string
        priceCurrency:
          description: 'The currency of this product in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
          externalDocs:
            url: 'http://schema.org/priceCurrency'
          type: string
        taxes:
          description: 'The taxes that affect this offer'
          type: array
          items:
            $ref: '#/components/schemas/Tax:jsonld-write'
        recurrence:
          description: 'The of this offer, only used in combination with subscribtion type products, entered according to the [ISO 8601-standard](https://en.wikipedia.org/wiki/ISO_8601#Durations)'
          type: string
          nullable: true
        notice:
          description: 'The the notice period requered to end an subscribtion, entered according to the [ISO 8601-standard](https://en.wikipedia.org/wiki/ISO_8601#Durations)'
          type: string
          nullable: true
        dateStart:
          description: 'The moment this subscribtion begins (only used on subscribtions)'
          type: string
          format: date-time
          nullable: true
        dateEnd:
          description: 'The moment this subscribtion end'
          type: string
          format: date-time
          nullable: true
      required:
        - order
        - offer
        - quantity
        - price
    Tax-read:
      type: object
      description: 'An entity representing an tax.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this tax'
          type: string
        description:
          description: 'An short description of this tax'
          type: string
          nullable: true
        price:
          description: 'The price of this tax'
          type: string
        priceCurrency:
          description: 'The currency of this tax in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
          externalDocs:
            url: 'http://schema.org/priceCurrency'
          type: string
        percentage:
          description: 'The tax percentage for this offer as an integer e.g. 9% makes 9'
          type: integer
        orderItems:
          description: 'The offers that use this tax'
          type: array
          items:
            $ref: '#/components/schemas/OrderItem-read'
        orders:
          description: 'The offers that use this tax'
          type: array
          items:
            $ref: '#/components/schemas/Order-read'
        dateCreated:
          description: 'The moment this request was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - price
        - percentage
    Tax-write:
      type: object
      description: 'An entity representing an tax.'
      required:
        - name
        - price
        - percentage
      properties:
        name:
          description: 'The name of this tax'
          type: string
        description:
          description: 'An short description of this tax'
          type: string
          nullable: true
        price:
          description: 'The price of this tax'
          type: string
        priceCurrency:
          description: 'The currency of this tax in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
          externalDocs:
            url: 'http://schema.org/priceCurrency'
          type: string
        percentage:
          description: 'The tax percentage for this offer as an integer e.g. 9% makes 9'
          type: integer
        orderItems:
          description: 'The offers that use this tax'
          type: array
          items:
            $ref: '#/components/schemas/OrderItem-write'
        orders:
          description: 'The offers that use this tax'
          type: array
          items:
            $ref: '#/components/schemas/Order-write'
    'Tax:jsonld-read':
      type: object
      description: 'An entity representing an tax.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this tax'
          type: string
        description:
          description: 'An short description of this tax'
          type: string
          nullable: true
        price:
          description: 'The price of this tax'
          type: string
        priceCurrency:
          description: 'The currency of this tax in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
          externalDocs:
            url: 'http://schema.org/priceCurrency'
          type: string
        percentage:
          description: 'The tax percentage for this offer as an integer e.g. 9% makes 9'
          type: integer
        orderItems:
          description: 'The offers that use this tax'
          type: array
          items:
            $ref: '#/components/schemas/OrderItem:jsonld-read'
        orders:
          description: 'The offers that use this tax'
          type: array
          items:
            $ref: '#/components/schemas/Order:jsonld-read'
        dateCreated:
          description: 'The moment this request was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - price
        - percentage
    'Tax:jsonld-write':
      type: object
      description: 'An entity representing an tax.'
      required:
        - name
        - price
        - percentage
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this tax'
          type: string
        description:
          description: 'An short description of this tax'
          type: string
          nullable: true
        price:
          description: 'The price of this tax'
          type: string
        priceCurrency:
          description: 'The currency of this tax in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
          externalDocs:
            url: 'http://schema.org/priceCurrency'
          type: string
        percentage:
          description: 'The tax percentage for this offer as an integer e.g. 9% makes 9'
          type: integer
        orderItems:
          description: 'The offers that use this tax'
          type: array
          items:
            $ref: '#/components/schemas/OrderItem:jsonld-write'
        orders:
          description: 'The offers that use this tax'
          type: array
          items:
            $ref: '#/components/schemas/Order:jsonld-write'
definitions:
  Order-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      organization:
        description: 'A specific commonground organisation'
        type: string
        example: 'https://wrc.zaakonline.nl/organisations/16353702-4614-42ff-92af-7dd11c8eef9f'
        format: url
      invoice:
        description: 'The invoice of this order'
        type: string
        example: 'https://wrc.zaakonline.nl/organisations/16353702-4614-42ff-92af-7dd11c8eef9f'
        format: url
      resources:
        description: 'The resource of the contact moment'
        type: array
      name:
        description: 'The name of the order'
        type: string
        example: 'my Order'
        maxLength: 255
      description:
        description: 'The description of the order'
        type: string
        example: 'This is the best order ever'
        maxLength: 255
      reference:
        description: 'The human readable reference for this request, build as {gemeentecode}-{year}-{referenceId}. Where gemeentecode is a four digit number for gemeenten and a four letter abriviation for other organizations'
        type: string
        example: 6666-2019-0000000012
        maxLength: 255
      price:
        description: 'The price of this product'
        type: string
        example: '50.00'
      priceCurrency:
        description: 'The currency of this product in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
        type: string
        example: EUR
      customer:
        description: 'The customer that placed this order'
        type: string
        example: 'https://example.org/people/1'
        format: url
      remark:
        description: 'Remarks on this order'
        type: string
      dateCreated:
        description: 'The moment this request was created by the submitter'
        type: \DateTime
      dateModified:
        description: 'The moment this request was modified by the submitter'
        type: \DateTime
      taxes:
        description: 'The taxes that affect this offer'
        type: \ArrayCollection
      items:
        description: 'The items in this order'
        type: \ArrayCollection
    required:
      - organization
      - name
  Order-write:
    properties:
      organization:
        description: 'A specific commonground organisation'
        type: string
        example: 'https://wrc.zaakonline.nl/organisations/16353702-4614-42ff-92af-7dd11c8eef9f'
        format: url
      invoice:
        description: 'The invoice of this order'
        type: string
        example: 'https://wrc.zaakonline.nl/organisations/16353702-4614-42ff-92af-7dd11c8eef9f'
        format: url
      resources:
        description: 'The resource of the contact moment'
        type: array
      name:
        description: 'The name of the order'
        type: string
        example: 'my Order'
        maxLength: 255
      description:
        description: 'The description of the order'
        type: string
        example: 'This is the best order ever'
        maxLength: 255
      price:
        description: 'The price of this product'
        type: string
        example: '50.00'
      priceCurrency:
        description: 'The currency of this product in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
        type: string
        example: EUR
      customer:
        description: 'The customer that placed this order'
        type: string
        example: 'https://example.org/people/1'
        format: url
      remark:
        description: 'Remarks on this order'
        type: string
      taxes:
        description: 'The taxes that affect this offer'
        type: \ArrayCollection
      items:
        description: 'The items in this order'
        type: \ArrayCollection
    required:
      - organization
      - name
  OrderItem-read:
    properties:
      id:
        description: ''
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of the object'
        type: string
        example: 'my OrderItem'
        maxLength: 255
      description:
        description: 'The description of the order item'
        type: string
        example: 'This is the best order item ever'
        maxLength: 255
      offer:
        description: 'The offer this item represents'
        type: string
        example: 'http://example.org/offers/1'
        format: url
      quantity:
        description: 'The quantity of the items that are ordered'
        type: int
        example: '1'
      price:
        description: |
          The price of this orderItem
          
          @example 50.00
        type: string
      priceCurrency:
        description: 'The currency of this product in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
        type: string
        example: EUR
      recurrence:
        description: 'The of this offer, only used in combination with subscribtion type products, entered according to the [ISO 8601-standard](https://en.wikipedia.org/wiki/ISO_8601#Durations)'
        type: string
        example: PT10M
      notice:
        description: 'The the notice period requered to end an subscribtion, entered according to the [ISO 8601-standard](https://en.wikipedia.org/wiki/ISO_8601#Durations)'
        type: string
        example: PT10M
      dateStart:
        description: 'The moment this subscribtion begins (only used on subscribtions)'
        type: \DateTime
      dateEnd:
        description: 'The moment this subscribtion end'
        type: \DateTime
      dateCreated:
        description: 'The moment this request was created by the submitter'
        type: \DateTime
      dateModified:
        description: 'The moment this request was updated'
        type: \DateTime
      order:
        description: 'The order that contains this item'
        type: \Order
      taxes:
        description: 'The taxes that affect this offer'
        type: \ArrayCollection
    required:
      - offer
      - price
      - order
  OrderItem-write:
    properties:
      name:
        description: 'The name of the object'
        type: string
        example: 'my OrderItem'
        maxLength: 255
      description:
        description: 'The description of the order item'
        type: string
        example: 'This is the best order item ever'
        maxLength: 255
      offer:
        description: 'The offer this item represents'
        type: string
        example: 'http://example.org/offers/1'
        format: url
      quantity:
        description: 'The quantity of the items that are ordered'
        type: int
        example: '1'
      price:
        description: |
          The price of this orderItem
          
          @example 50.00
        type: string
      priceCurrency:
        description: 'The currency of this product in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
        type: string
        example: EUR
      recurrence:
        description: 'The of this offer, only used in combination with subscribtion type products, entered according to the [ISO 8601-standard](https://en.wikipedia.org/wiki/ISO_8601#Durations)'
        type: string
        example: PT10M
      notice:
        description: 'The the notice period requered to end an subscribtion, entered according to the [ISO 8601-standard](https://en.wikipedia.org/wiki/ISO_8601#Durations)'
        type: string
        example: PT10M
      dateStart:
        description: 'The moment this subscribtion begins (only used on subscribtions)'
        type: \DateTime
      dateEnd:
        description: 'The moment this subscribtion end'
        type: \DateTime
      order:
        description: 'The order that contains this item'
        type: \Order
      taxes:
        description: 'The taxes that affect this offer'
        type: \ArrayCollection
    required:
      - offer
      - price
      - order
  Tax-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this tax'
        type: string
        example: 'my offer'
        maxLength: 255
      description:
        description: 'An short description of this tax'
        type: string
        example: 'This is the best product ever'
        maxLength: 2550
      price:
        description: 'The price of this tax'
        type: string
        example: '50.00'
      priceCurrency:
        description: 'The currency of this tax in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
        type: string
        example: EUR
      percentage:
        description: 'The tax percentage for this offer as an integer e.g. 9% makes 9'
        type: int
        example: '9'
      dateCreated:
        description: 'The moment this request was created'
        type: \Datetime
      dateModified:
        description: 'The moment this request last Modified'
        type: \Datetime
      orderItems:
        description: 'The offers that use this tax'
        type: \ArrayCollection
      orders:
        description: 'The offers that use this tax'
        type: \ArrayCollection
    required:
      - name
      - price
  Tax-write:
    properties:
      name:
        description: 'The name of this tax'
        type: string
        example: 'my offer'
        maxLength: 255
      description:
        description: 'An short description of this tax'
        type: string
        example: 'This is the best product ever'
        maxLength: 2550
      price:
        description: 'The price of this tax'
        type: string
        example: '50.00'
      priceCurrency:
        description: 'The currency of this tax in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
        type: string
        example: EUR
      percentage:
        description: 'The tax percentage for this offer as an integer e.g. 9% makes 9'
        type: int
        example: '9'
      orderItems:
        description: 'The offers that use this tax'
        type: \ArrayCollection
      orders:
        description: 'The offers that use this tax'
        type: \ArrayCollection
    required:
      - name
      - price
  AuditTrail-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line looks suspicius'
        maxLength: 2555
      application:
        description: 'The application that made the request'
        type: string
        format: url
        maxLength: 255
      request:
        description: 'The id of the request within that application'
        type: string
        format: url
        maxLength: 255
      user:
        description: 'The user on behalf of wich the request was made'
        type: string
        format: url
        maxLength: 255
      subject:
        description: '???'
        type: string
        maxLength: 255
      process:
        description: 'The procces on behalf of wich the request was made'
        type: string
        maxLength: 255
      dataElements:
        description: 'The moment this request was created'
        type: array
      dataSubjects:
        description: 'The moment this request was created'
        type: array
      resource:
        description: 'The resource that was requested'
        type: string
        maxLength: 255
      resourceType:
        description: 'The type of the resource that was requested'
        type: string
        maxLength: 255
      route:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      endpoint:
        description: 'The endpoint that the request was made to'
        type: string
        maxLength: 255
      method:
        description: 'The method that was used'
        type: string
        maxLength: 255
      accept:
        description: 'The contentType that was reqousted'
        type: string
        maxLength: 255
      contentType:
        description: 'The contentType that was suplieds'
        type: string
        maxLength: 255
      content:
        description: 'The moment this request was created'
        type: string
        maxLength: 2555
      ip:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      session:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      headers:
        description: 'The headers supplied by client'
        type: array
      statusCode:
        description: 'The status code returned to client'
        type: int
        example: '200'
      notFound:
        description: 'Whether or not the reqousted endpoint was found'
        type: bool
        example: 'false'
      forbidden:
        description: 'Whether or not the client was allowed to the reqousted endpoint'
        type: bool
        example: 'false'
      ok:
        description: 'Whether or not there where any problems'
        type: bool
        example: 'true'
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        example: '2021-02-19 15:18:44'
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        example: '2021-02-19 15:18:44'
    required: []
  AuditTrail-write:
    properties:
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line looks suspicius'
        maxLength: 2555
    required: []
  ChangeLog-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line is suspicius'
        maxLength: 2555
      action:
        description: ''
        type: string
      objectId:
        description: ''
        type: string
      objectClass:
        description: ''
        type: string
      version:
        description: ''
        type: int
      data:
        description: ''
        type: array
      username:
        description: ''
        type: string
      session:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        example: '2021-02-19 15:18:44'
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        example: '2021-02-19 15:18:44'
    required: []
  ChangeLog-write:
    properties:
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line is suspicius'
        maxLength: 2555
    required: []
tags:
  -
    name: Order
    description: |
      An entity representing an order.
      
      This entity represents an order for sales
  -
    name: OrderItem
    description: |
      An entity representing an item of an order.
      
      This entity represents an item that is placed on the order
  -
    name: Tax
    description: |
      An entity representing an tax.
      
      This entity represents an offer that bridges products to the OrderRegistratieComponent to be able to change prices without invalidating past orders.
  -
    name: AuditTrail
    description: |
      An resource representing a log line.
      
      This entity represents a product that can be ordered via the OrderRegistratieComponent.
  -
    name: ChangeLog
    description: |
      An resource representing a log line.
      
      This entity represents a product that can be ordered via the OrderRegistratieComponent.
securityDefinitions:
  JWT-Oauth:
    type: oauth2
    authorizationUrl: 'http://petstore.swagger.io/api/oauth/dialog'
    flow: implicit
    scopes:
      read: 'read right to the ChangeLog resource'
      write: 'write right to the ChangeLog resource'
  JWT-Token:
    type: apiKey
    in: header
    name: Authorization
    scopes:
      read: 'read right to the ChangeLog resource'
      write: 'write right to the ChangeLog resource'
host: irc.zaakonline.nl
servers:
  -
    name: conduction.nl
    url: orderregistratiecomponent.dev.conduction.nl
externalDocs:
  -
    description: 'OAS Documentatie'
    url: 'http://proto.demo.common-ground.dev'
x-commonground:
  type: service
  developers:
    -
      name: Conduction
      url: 'https://github.com/ConductionNL'
      email: info@conduction.nl
    -
      name: 'Gemeente "s-Hertogenbosch'
      url: 'https://github.com/gemeenteshertogenbosch'
      email: info@s-hertogenbosch.nl/
    -
      name: 'Gemeente Utrecht'
      url: 'https://github.com/GemeenteUtrecht'
      email: info@utrecht.nl
  builds:
    -
      name: travis
      logo: 'https://travis-ci.org/api-platform/core.svg?branch=master'
      url: 'https://travis-ci.org/api-platform/core'
    -
      name: appveyor
      logo: 'https://ci.appveyor.com/api/projects/status/grwuyprts3wdqx5l?svg=true'
      url: 'https://ci.appveyor.com/project/dunglas/dunglasapibundle'
    -
      name: codecov
      logo: 'https://codecov.io/gh/api-platform/core/branch/master/graph/badge.svg'
      url: 'https://codecov.io/gh/api-platform/core'
    -
      name: SensioLabsInsight
      logo: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93/mini.png'
      url: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93'
    -
      name: 'Scrutinizer Code Quality'
      logo: 'https://scrutinizer-ci.com/g/api-platform/core/badges/quality-score.png?b=master'
      url: 'https://scrutinizer-ci.com/g/api-platform/core/?branch=master'
